{
    "$defs": {
        "Agent": {
            "additionalProperties": false,
            "description": "person, group, organization or project that provides a piece of information (i.e. a knowledge association)",
            "properties": {
                "address": {
                    "description": "Collection of information that describes the location of a building, apartment, or other structure",
                    "type": "string"
                },
                "affiliation": {
                    "description": "a professional relationship between one provider (x) within another provider (often an organization). Target provider identity should be specified by a CURIE. Providers may have multiple affiliations.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Agent",
            "type": "object"
        },
        "Association": {
            "additionalProperties": false,
            "description": "A typed association between two entities, supported by evidence",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "hasEvidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": "boolean"
                },
                "object": {
                    "description": "Connects an association to the object of the association. For example, in a apple-to-orange assocation, the apple is subject and orange is object.",
                    "type": "string"
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "publications": {
                    "description": "connects an association to publications supporting the association",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "$ref": "#/$defs/OntologyClass"
                    },
                    "type": "array"
                },
                "subject": {
                    "description": "Connects an association to the subject of the association. For example, in a apple-to-orange association, the apple is subject and orange is object.",
                    "type": "string"
                },
                "type": {
                    "description": "rdf:type of ucs-core:Association should be fixed at rdf:Statement",
                    "type": "string"
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "id"
            ],
            "title": "Association",
            "type": "object"
        },
        "Attribute": {
            "additionalProperties": false,
            "description": "A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, material.",
            "properties": {
                "hasAttributeType": {
                    "$ref": "#/$defs/OntologyClass",
                    "description": "connects an attribute to a class that describes it"
                },
                "hasQualitativeValue": {
                    "description": "connects an attribute to a value",
                    "type": "string"
                },
                "hasQuantitativeValue": {
                    "description": "Connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": "string"
                },
                "src": {
                    "description": "Object (person, place, text, thing, etc.) from which something (information, goods, etc.) comes or is acquired",
                    "type": "string"
                }
            },
            "required": [
                "hasAttributeType"
            ],
            "title": "Attribute",
            "type": "object"
        },
        "EvidenceType": {
            "additionalProperties": false,
            "description": "Class of evidence that supports an association",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "creationDate": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": "string"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": "string"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "EvidenceType",
            "type": "object"
        },
        "Hardware": {
            "additionalProperties": false,
            "description": "physical components of a computer",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Hardware",
            "type": "object"
        },
        "Linux": {
            "additionalProperties": false,
            "description": "family of Unix-like operating systems using Linux kernel and open source",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Linux",
            "type": "object"
        },
        "MetaObject": {
            "additionalProperties": true,
            "description": "linkml:Any type is an experimental feature for allowing arbitrary objects",
            "title": "MetaObject",
            "type": "object"
        },
        "NamedThing": {
            "additionalProperties": false,
            "description": "a databased entity or concept/class",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NamedThing",
            "type": "object"
        },
        "OperatingSystem": {
            "additionalProperties": false,
            "description": "An operating system (OS) is system software that manages computer hardware, software resources, and provides common services for computer programs.",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "OperatingSystem",
            "type": "object"
        },
        "Project": {
            "additionalProperties": false,
            "description": "Collaborative enterprise, frequently involving research or design, that is carefully planned to achieve a particular aim",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Project",
            "type": "object"
        },
        "Publication": {
            "additionalProperties": false,
            "description": "Any published piece of information. Can refer to a whole publication, its encompassing publication (i.e. journal or book) or to a part of a publication, if of significant knowledge scope (e.g. a figure, figure legend, or section highlighted by NLP). The scope is intended to be general and include information published on the web, as well as printed materials, either directly or in one of the Publication Csolink category subclasses.",
            "properties": {
                "authors": {
                    "description": "Connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "creationDate": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": "string"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lcshTerms": {
                    "description": "Library of Congress Subject Headings (LCSH) terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "pages": {
                    "description": "Page number of source referenced for statement or publication",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": "string"
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": "string"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Publication",
            "type": "object"
        },
        "QuantityValue": {
            "additionalProperties": false,
            "description": "A value of an attribute that is quantitative and measurable, available as a combination of a unit and a numeric value",
            "properties": {
                "hasNumericValue": {
                    "description": "connects a quantity value to a number",
                    "type": "number"
                },
                "hasUnit": {
                    "description": "connects a quantity value to a unit",
                    "type": "string"
                }
            },
            "title": "QuantityValue",
            "type": "object"
        },
        "Software": {
            "additionalProperties": false,
            "description": "A set of instructions in a computer programming language that can be executed by a computer, possibly after compilation into another programming language. The term Software includes ComputerPrograms (free-standing software), object methods, subroutines and software packages.",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Software",
            "type": "object"
        },
        "Solaris": {
            "additionalProperties": false,
            "description": "Unix operating system originally developed by Sun Microsystems",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Solaris",
            "type": "object"
        },
        "System": {
            "additionalProperties": false,
            "description": "An entity that intends to perform some functions, interacting with other systems. Relative to a given system, the entities with which it interacts, are considered its environment. A system is structurally composed of a set of components bound together.",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "System",
            "type": "object"
        },
        "Windows": {
            "additionalProperties": false,
            "description": "family of computer operating systems developed by Microsoft",
            "properties": {
                "category": {
                    "description": "Name of the high level OntologyClass in which this entity is categorized. Corresponds to the label for the base entity type class.\n * In a neo4j database this MAY correspond to the neo4j label tag.\n * In an RDF database it should be a universal model class URI.\nThis field is multi-valued. It should include values for ancestors of the universal class.\nIn an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific base class, or potentially to a class more specific than something in base.",
                    "items": {
                        "pattern": "^ucs-core:[A-Z][A-Za-z]+$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": "string"
                },
                "hasAttribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "$ref": "#/$defs/Attribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "inTaxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'ThingWithTaxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": "string"
                },
                "providedBy": {
                    "description": "The value in this nodeProperty represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Anchoring point (of a name) in taxonomy",
                    "type": "string"
                },
                "xref": {
                    "description": "Alternate CURIEs for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Windows",
            "type": "object"
        }
    },
    "$id": "https://w3id.org/lmodel/ucs-core",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": true,
    "metamodel_version": "1.7.0",
    "title": "ucs-core",
    "type": "object",
    "version": null
}